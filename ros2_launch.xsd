<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <!-- Root element -->
  <xsd:element name="launch">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="node"/>
        <xsd:element ref="include"/>
        <xsd:element ref="arg"/>
        <xsd:element ref="let"/>
        <xsd:element ref="param"/>
        <xsd:element ref="remap"/>
        <xsd:element ref="group"/>
        <xsd:element ref="executable"/>
        <xsd:element ref="push_ros_namespace"/>
        <xsd:element ref="push-ros-namespace"/>
        <xsd:element ref="set_parameter"/>
        <xsd:element ref="set_parameters_from_file"/>
        <xsd:element ref="set_remap"/>
        <xsd:element ref="set_env"/>
        <xsd:element ref="unset_env"/>
        <xsd:element ref="set_ros_log_dir"/>
        <xsd:element ref="set_use_sim_time"/>
        <xsd:element ref="log"/>
        <xsd:element ref="node_container"/>
        <xsd:element ref="load_composable_node"/>
        <xsd:element ref="timer"/>
        <xsd:element ref="ros_timer"/>
      </xsd:choice>
      <xsd:attribute name="version" type="xsd:string"/>
      <xsd:attribute name="deprecated" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Node element -->
  <xsd:element name="node">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="param"/>
        <xsd:element ref="remap"/>
        <xsd:element ref="ros_param"/>
        <xsd:element ref="env"/>
      </xsd:choice>
      <xsd:attribute name="pkg" type="xsd:string" use="required"/>
      <xsd:attribute name="exec" type="xsd:string" use="required"/>
      <xsd:attribute name="name" type="xsd:string"/>
      <xsd:attribute name="namespace" type="xsd:string"/>
      <xsd:attribute name="exec_name" type="xsd:string"/>
      <xsd:attribute name="args" type="xsd:string"/>
      <xsd:attribute name="ros_args" type="xsd:string"/>
      <xsd:attribute name="output" type="xsd:string"/>
      <xsd:attribute name="respawn" type="xsd:string"/>
      <xsd:attribute name="respawn_delay" type="xsd:string"/>
      <xsd:attribute name="required" type="xsd:string"/>
      <xsd:attribute name="launch-prefix" type="xsd:string"/>
      <xsd:attribute name="cwd" type="xsd:string"/>
      <xsd:attribute name="on_exit" type="xsd:string"/>
      <xsd:attribute name="emulate_tty" type="xsd:string"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Include element -->
  <xsd:element name="include">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="arg"/>
        <xsd:element ref="env"/>
        <xsd:element ref="extra_arg"/>
      </xsd:choice>
      <xsd:attribute name="file" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Argument element -->
  <xsd:element name="arg">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="choice"/>
      </xsd:choice>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="default" type="xsd:string"/>
      <xsd:attribute name="value" type="xsd:string"/>
      <xsd:attribute name="description" type="xsd:string"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Choice element (for arg enumerations) -->
  <xsd:element name="choice">
    <xsd:complexType>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Let element (local variable) -->
  <xsd:element name="let">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Parameter element -->
  <xsd:element name="param">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="name" type="xsd:string"/>
          <xsd:attribute name="value" type="xsd:string"/>
          <xsd:attribute name="value-sep" type="xsd:string"/>
          <xsd:attribute name="type" type="xsd:string"/>
          <xsd:attribute name="from" type="xsd:string"/>
          <xsd:attribute name="allow_substs" type="xsd:string"/>
          <xsd:attribute name="if" type="xsd:string"/>
          <xsd:attribute name="unless" type="xsd:string"/>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <!-- ROS parameter element (for loading from YAML files) -->
  <xsd:element name="ros_param">
    <xsd:complexType>
      <xsd:attribute name="file" type="xsd:string"/>
      <xsd:attribute name="param" type="xsd:string"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Remap element -->
  <xsd:element name="remap">
    <xsd:complexType>
      <xsd:attribute name="from" type="xsd:string" use="required"/>
      <xsd:attribute name="to" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Group element -->
  <xsd:element name="group">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="node"/>
        <xsd:element ref="include"/>
        <xsd:element ref="arg"/>
        <xsd:element ref="let"/>
        <xsd:element ref="param"/>
        <xsd:element ref="remap"/>
        <xsd:element ref="group"/>
        <xsd:element ref="push_ros_namespace"/>
        <xsd:element ref="push-ros-namespace"/>
        <xsd:element ref="set_parameter"/>
        <xsd:element ref="set_parameters_from_file"/>
        <xsd:element ref="set_remap"/>
        <xsd:element ref="set_env"/>
        <xsd:element ref="unset_env"/>
        <xsd:element ref="set_ros_log_dir"/>
        <xsd:element ref="set_use_sim_time"/>
        <xsd:element ref="log"/>
        <xsd:element ref="executable"/>
        <xsd:element ref="node_container"/>
        <xsd:element ref="load_composable_node"/>
        <xsd:element ref="timer"/>
        <xsd:element ref="ros_timer"/>
      </xsd:choice>
      <xsd:attribute name="scoped" type="xsd:string"/>
      <xsd:attribute name="ns" type="xsd:string"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Executable element -->
  <xsd:element name="executable">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="env"/>
      </xsd:choice>
      <xsd:attribute name="cmd" type="xsd:string" use="required"/>
      <xsd:attribute name="cwd" type="xsd:string"/>
      <xsd:attribute name="name" type="xsd:string"/>
      <xsd:attribute name="launch-prefix" type="xsd:string"/>
      <xsd:attribute name="output" type="xsd:string"/>
      <xsd:attribute name="shell" type="xsd:string"/>
      <xsd:attribute name="on_exit" type="xsd:string"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Push ROS namespace element -->
  <xsd:element name="push_ros_namespace">
    <xsd:complexType>
      <xsd:attribute name="namespace" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Push ROS namespace element (hyphenated variant, not preferred: https://github.com/ros2/launch_ros/issues/142) -->
  <xsd:element name="push-ros-namespace">
    <xsd:annotation>
      <xsd:documentation>
        DEPRECATED: Use 'push_ros_namespace' instead (with underscores).
        The hyphenated variant is not preferred. See: https://github.com/ros2/launch_ros/issues/142
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="namespace" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Set parameter element -->
  <xsd:element name="set_parameter">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Set parameters from file element -->
  <xsd:element name="set_parameters_from_file">
    <xsd:complexType>
      <xsd:attribute name="filename" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Set ROS log directory element -->
  <xsd:element name="set_ros_log_dir">
    <xsd:complexType>
      <xsd:attribute name="new_log_dir" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Set use_sim_time parameter element -->
  <xsd:element name="set_use_sim_time">
    <xsd:complexType>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Set remap element (scoped remap for group) -->
  <xsd:element name="set_remap">
    <xsd:complexType>
      <xsd:attribute name="from" type="xsd:string" use="required"/>
      <xsd:attribute name="to" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Set environment variable element -->
  <xsd:element name="set_env">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Unset environment variable element -->
  <xsd:element name="unset_env">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Environment variable element (for node/executable) -->
  <xsd:element name="env">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Log element -->
  <xsd:element name="log">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="message" type="xsd:string"/>
          <xsd:attribute name="level" type="xsd:string"/>
          <xsd:attribute name="if" type="xsd:string"/>
          <xsd:attribute name="unless" type="xsd:string"/>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>

  <!-- Node container element (for composable nodes) -->
  <xsd:element name="node_container">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="composable_node"/>
        <xsd:element ref="load_composable_node"/>
      </xsd:choice>
      <xsd:attribute name="pkg" type="xsd:string" use="required"/>
      <xsd:attribute name="exec" type="xsd:string" use="required"/>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="namespace" type="xsd:string"/>
      <xsd:attribute name="args" type="xsd:string"/>
      <xsd:attribute name="ros_args" type="xsd:string"/>
      <xsd:attribute name="output" type="xsd:string"/>
      <xsd:attribute name="launch-prefix" type="xsd:string"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Timer element (for delayed actions using wall clock time) -->
  <xsd:element name="timer">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="node"/>
        <xsd:element ref="include"/>
        <xsd:element ref="executable"/>
        <xsd:element ref="group"/>
      </xsd:choice>
      <xsd:attribute name="period" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- ROS Timer element (for delayed actions using ROS time) -->
  <xsd:element name="ros_timer">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="node"/>
        <xsd:element ref="include"/>
        <xsd:element ref="executable"/>
        <xsd:element ref="group"/>
      </xsd:choice>
      <xsd:attribute name="period" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Load composable node element -->
  <xsd:element name="load_composable_node">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="composable_node"/>
      </xsd:choice>
      <xsd:attribute name="target" type="xsd:string" use="required"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Composable node element -->
  <xsd:element name="composable_node">
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="param"/>
        <xsd:element ref="remap"/>
        <xsd:element ref="ros_param"/>
        <xsd:element ref="env"/>
        <xsd:element ref="extra_arg"/>
      </xsd:choice>
      <xsd:attribute name="pkg" type="xsd:string" use="required"/>
      <xsd:attribute name="plugin" type="xsd:string" use="required"/>
      <xsd:attribute name="name" type="xsd:string"/>
      <xsd:attribute name="namespace" type="xsd:string"/>
      <xsd:attribute name="if" type="xsd:string"/>
      <xsd:attribute name="unless" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Extra argument element (for composable nodes and includes) -->
  <xsd:element name="extra_arg">
    <xsd:complexType>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="value" type="xsd:string" use="required"/>
    </xsd:complexType>
  </xsd:element>

</xsd:schema>
